// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OfertaProcura.Context;

#nullable disable

namespace OfertaProcura.Infrastructure.Migrations
{
    [DbContext(typeof(OfertaProcuraContext))]
    [Migration("20220506024015_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OfertaProcura.Models.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data_Atualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("Id_Cliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Portifolio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Nota")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Id_Cliente");

                    b.HasIndex("Id_Portifolio");

                    b.ToTable("Comentarios", (string)null);
                });

            modelBuilder.Entity("OfertaProcura.Models.Contratacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id_Contratado")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Contratante")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_Contratado");

                    b.HasIndex("Id_Contratante");

                    b.ToTable("Contratacao", (string)null);
                });

            modelBuilder.Entity("OfertaProcura.Models.ImagemPortifolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caminho_Imagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id_Portifolio")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_Portifolio");

                    b.ToTable("ImagemPortifolio", (string)null);
                });

            modelBuilder.Entity("OfertaProcura.Models.Portifolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data_Atualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("Id");

                    b.ToTable("Portifolio", (string)null);
                });

            modelBuilder.Entity("OfertaProcura.Models.Profissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome_Profissao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Profissao", (string)null);
                });

            modelBuilder.Entity("OfertaProcura.Models.Profissional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Id_Portifolio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Id_Profissao")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_Portifolio")
                        .IsUnique()
                        .HasFilter("[Id_Portifolio] IS NOT NULL");

                    b.HasIndex("Id_Profissao");

                    b.ToTable("Profissional", (string)null);
                });

            modelBuilder.Entity("OfertaProcura.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Cep")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("Data_Atualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("Id_Profissional")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Img_perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Nota_Perfil")
                        .HasColumnType("float");

                    b.Property<string>("Numero_Casa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Numero_Celular")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Numero_Residencia")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Profissional")
                        .IsUnique()
                        .HasFilter("[Id_Profissional] IS NOT NULL");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("OfertaProcura.Models.Comentario", b =>
                {
                    b.HasOne("OfertaProcura.Models.Usuario", "RefCliente")
                        .WithMany("RefComentario")
                        .HasForeignKey("Id_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OfertaProcura.Models.Portifolio", "RefPortifolio")
                        .WithMany("RefComentarios")
                        .HasForeignKey("Id_Portifolio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RefCliente");

                    b.Navigation("RefPortifolio");
                });

            modelBuilder.Entity("OfertaProcura.Models.Contratacao", b =>
                {
                    b.HasOne("OfertaProcura.Models.Profissional", "RefContratado")
                        .WithMany("RefContratacoes")
                        .HasForeignKey("Id_Contratado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OfertaProcura.Models.Usuario", "RefContratante")
                        .WithMany("RefContratacoes")
                        .HasForeignKey("Id_Contratante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RefContratado");

                    b.Navigation("RefContratante");
                });

            modelBuilder.Entity("OfertaProcura.Models.ImagemPortifolio", b =>
                {
                    b.HasOne("OfertaProcura.Models.Portifolio", "RefPortifolio")
                        .WithMany("RefImagemPortifolios")
                        .HasForeignKey("Id_Portifolio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RefPortifolio");
                });

            modelBuilder.Entity("OfertaProcura.Models.Profissional", b =>
                {
                    b.HasOne("OfertaProcura.Models.Portifolio", "RefPortifolio")
                        .WithOne("RefProfissional")
                        .HasForeignKey("OfertaProcura.Models.Profissional", "Id_Portifolio");

                    b.HasOne("OfertaProcura.Models.Profissao", "RefProfissao")
                        .WithMany("RefProfissional")
                        .HasForeignKey("Id_Profissao");

                    b.Navigation("RefPortifolio");

                    b.Navigation("RefProfissao");
                });

            modelBuilder.Entity("OfertaProcura.Models.Usuario", b =>
                {
                    b.HasOne("OfertaProcura.Models.Profissional", "RefProfissional")
                        .WithOne("RefUsuario")
                        .HasForeignKey("OfertaProcura.Models.Usuario", "Id_Profissional");

                    b.Navigation("RefProfissional");
                });

            modelBuilder.Entity("OfertaProcura.Models.Portifolio", b =>
                {
                    b.Navigation("RefComentarios");

                    b.Navigation("RefImagemPortifolios");

                    b.Navigation("RefProfissional")
                        .IsRequired();
                });

            modelBuilder.Entity("OfertaProcura.Models.Profissao", b =>
                {
                    b.Navigation("RefProfissional");
                });

            modelBuilder.Entity("OfertaProcura.Models.Profissional", b =>
                {
                    b.Navigation("RefContratacoes");

                    b.Navigation("RefUsuario")
                        .IsRequired();
                });

            modelBuilder.Entity("OfertaProcura.Models.Usuario", b =>
                {
                    b.Navigation("RefComentario");

                    b.Navigation("RefContratacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
